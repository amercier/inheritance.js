{"version":3,"file":"inheritance.uglify2.js","sources":["src/inherit.js","src/inheritance.js"],"names":[],"mappings":"AAsCA,OAAA,yBAAA,WAEA,QAAA,MASA,MAAA,UAAA,EAAA,GAEA,GAAA,IAAA,EACA,KAAA,IAAA,OAAA,wCAGA,IAAA,UAAA,GACA,KAAA,IAAA,OAAA,EAAA,KAAA,yBAAA,EAAA,OAAA,KAWA,OAPA,KACA,EAAA,UAAA,EAAA,UACA,EAAA,UAAA,GAAA,GACA,EAAA,UAAA,YAAA,EACA,EAAA,OAAA,GAGA,QCjEA,OAAA,2BACA,aACA,SAAA,GAEA,OACA,QAAA","sourcesContent":["\n/*! inheritance/inherit */\r\n/**\r\n * Simple Native Javascript Inheritance\r\n * ====================================\r\n *\r\n * This module provides a function `inherit` that create prototypal inheritance\r\n * from a parent function to a child function.\r\n *\r\n *     inherit(parentFunction, childFunction);\r\n *\r\n *     new parentFunction() instanceof parentFunction; // true\r\n *     new parentFunction() instanceof childFunction ; // true\r\n *\r\n *\r\n * Prototypal inheritance is provided through native Javascript class\r\n * inheritance pattern:\r\n *\r\n *     function Parent(param1, ...) {\r\n *        ...\r\n *     }\r\n *\r\n *     function __();\r\n *     function Child(param1, ...) {\r\n *        Parent.call(this, param1, ...);\r\n *        ...\r\n *     }\r\n *     Child.prototype = new __();\r\n *     Child.prototype.constructor = Child;\r\n *\r\n * This can changed by overriding this module by your own implementation. This\r\n * implementation must be a AMD module that returns a method with the following\r\n * signature:\r\n *\r\n *     inherit(Function parentFunction, Function childFunction) : void\r\n *\r\n * @author Alexandre Mercier <pro.alexandre.mercier@gmail.com>\r\n */\r\ndefine('inheritance/inherit',[], function() {\r\n\r\n  function __() {} // see inherhit()\r\n\r\n  /**\r\n   * Inheritance method\r\n   *\r\n   * @param {Function} childFunction  The child function that will inherit from parentFunction\r\n   * @param {Function} parentFunction The parent function that childFunction will inherit from\r\n   * @return null  Returns null to prevent API usage confusion\r\n   */\r\n  return function inherhit (childFunction, parentFunction) {\r\n\r\n    if (childFunction === parentFunction) {\r\n      throw new Error('A function cannot inherit from itself');\r\n    }\r\n\r\n    if ('parent' in childFunction) {\r\n      throw new Error(childFunction.name + ' inherit already from ' + childFunction.parent.name);\r\n    }\r\n\r\n    // Inheritance\r\n    if(parentFunction) {\r\n      __.prototype = parentFunction.prototype;\r\n      childFunction.prototype = new __();\r\n      childFunction.prototype.constructor = childFunction;\r\n      childFunction.parent = parentFunction;\r\n    }\r\n\r\n    return null;\r\n\r\n  };\r\n\r\n});\r\n","\n/*! inheritance/inheritance */\r\ndefine('inheritance/inheritance',[\r\n    './inherit'\r\n  ], function(inherit) {\r\n\r\n    return {\r\n      inherit: inherit\r\n    };\r\n\r\n  }\r\n);\r\n"]}